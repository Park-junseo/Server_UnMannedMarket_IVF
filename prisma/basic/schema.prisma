// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "./basic"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 로그인 타입
enum LoginType {
  LOCAL
  ADMIN
}

// 유저 등급 타입
enum UserType {
  GENERAL
  BUSINESS
  ADMIN
  MANAGER
}

// 유저
model User {
  id                        Int      @id @default(autoincrement())
  createdAt                 DateTime @default(now())

  loginId                   String // 로그인 ID (SNS 토큰)
  loginPw                   String?   @db.Text // 로그인 PW 
  username                  String
  loginType                 LoginType
  userType                  UserType
  nickname                  String
  phone                     String    @default("")
  isDisable                 Boolean   @default(false)

  Board                     Board[]
  BoardReply                BoardReply[]
  Notice                    Notice[]

  @@unique([loginType, loginId], name: "loginUnique")
}

model Notice {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  title   String
  content String? @db.Text
  link    String?

  userId  Int
  User    User  @relation(fields: [userId], references: [id])
}

// 게시물 상태
enum BoardType {
  BTALK //잡담
  BINFORM //정보
  BQUESTION //질문
}

// 게시물
model Board {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  title    String
  content  String?  @db.Text
  link     String?
  startDay DateTime @default(now())
  endDay   DateTime @default(now())

  isDisable  Boolean      @default(false) // 노출 여부 false 노출 true 비노출
  BoardImage BoardImage[]
  BoardReply BoardReply[]

  userId  Int
  User    User  @relation(fields: [userId], references: [id])

  boardType  BoardType    @default(BTALK) //처음에는 보드타입(잡담)
}

// 게시물 이미지
model BoardImage {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())

  url    String       @db.Text
  width  Int
  height Int
  size   Int

  isThumb Boolean     @default(false) // 썸네일이미지 여부 true 썸네일 false 상세

  boardId Int         @unique
  Board   Board       @relation(fields: [boardId], references: [id])
}

// 게시물 댓글
model BoardReply {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  content   String
  isDisable Boolean @default(false)

  userId  Int
  User    User  @relation(fields: [userId], references: [id])
  boardId Int
  Board   Board @relation(fields: [boardId], references: [id])
  boardReplyId Int?
  BoardReply BoardReply? @relation("BoardNestedReply",fields: [boardReplyId], references: [id])
  BoardNestedReply BoardReply[] @relation("BoardNestedReply")

  boardType  BoardType    @default(BTALK) //처음에는 보드타입(잡담)
}